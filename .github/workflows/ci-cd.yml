name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: docker compose up -d --build
        env:
          EXPRESS_PORT: 3000
          DB_HOST: localhost
          DB_PORT: 3306
          DB_NAME: devops_project
          DB_USER: root
          DB_PASSWORD: ${{ secrets.MARIADB_PASSWORD_CI }}
          ADMIN_USER: admin
          ADMIN_PASSWORD: password
          MARIADB_ROOT_PASSWORD: ${{ secrets.MARIADB_PASSWORD_CI }}
          MARIADB_DATABASE: devops_project

      - name: Wait for MariaDB to be healthy
        run: |
          for i in {1..30}; do
            if docker compose exec -T mariadb mariadb-admin ping -h localhost --silent; then
              echo "MariaDB is up!"
              break
            fi
            echo "Waiting for MariaDB..."
            sleep 2
          done

      - name: Setup database with fixtures
        run: docker compose exec -T app node fixtures/setup-db.js

      - name: Run linter
        run: docker compose exec -T app npm run lint

      - name: Run unit tests
        run: docker compose exec -T app npm run test:unit
        env:
          ADMIN_USER: admin
          ADMIN_PASSWORD: password

      - name: Run Cypress e2e tests
        uses: cypress-io/github-action@v6
        with:
          start: docker compose up -d --build
          wait-on: http://localhost:3000
          wait-on-timeout: 60
          browser: chrome
        env:
          CYPRESS_baseUrl: http://localhost:3000
          ADMIN_USER: admin
          ADMIN_PASSWORD: password

      - name: Show logs if failed
        if: failure()
        run: docker compose logs

      - name: Stop containers
        if: always()
        run: docker compose down -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ always() && needs.build-and-test.result == 'success' }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: zastial/project_devops

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-vm:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 89.168.46.10 >> ~/.ssh/known_hosts

      - name: Deploy to VM - Pull and restart container
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@89.168.46.10 << 'EOF'
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull zastial/project_devops:latest
            docker stop project-devops-app-1 || true
            docker rm project-devops-app-1 || true
            docker run -d --name project-devops-app-1 -p 3000:3000 zastial/project_devops:latest
          EOF


