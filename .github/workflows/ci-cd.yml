name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: docker compose up -d
        env:
          EXPRESS_PORT: 3000
          DB_HOST: localhost
          DB_PORT: 3306
          DB_NAME: devops_project
          DB_USER: root
          DB_PASSWORD: ${{ secrets.MARIADB_PASSWORD_CI }}
          ADMIN_USER: admin
          ADMIN_PASSWORD: password
          MARIADB_ROOT_PASSWORD: ${{ secrets.MARIADB_PASSWORD_CI }}
          MARIADB_DATABASE: devops_project

      - name: Wait for MariaDB to be healthy
        run: |
          for i in {1..30}; do
            if docker compose exec -T mariadb mariadb-admin ping -h localhost --silent; then
              echo "MariaDB is up!"
              break
            fi
            echo "Waiting for MariaDB..."
            sleep 2
          done

      - name: Setup database with fixtures
        run: docker compose exec -T app node fixtures/setup-db.js

      - name: Run linter
        run: docker compose exec -T app npm run lint

      - name: Run unit tests
        run: docker compose exec -T app npm run test:unit
        env:
          ADMIN_USER: admin
          ADMIN_PASSWORD: password

      - name: Run Cypress e2e tests
        uses: cypress-io/github-action@v6
        with:
          start: docker compose up -d
          wait-on: http://localhost:3000
          wait-on-timeout: 60
          browser: chrome
        env:
          CYPRESS_baseUrl: http://localhost:3000
          ADMIN_USER: admin
          ADMIN_PASSWORD: password

      - name: Show logs if failed
        if: failure()
        run: docker compose logs

      - name: Stop containers
        if: always()
        run: docker compose down -v

  push-github-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build image
        run: docker build . --file Dockerfile --tag projet-devops-docker-image --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/projet-devops-docker-image

          # Convert IMAGE_ID to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Extract version from ref
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Remove 'v' prefix if tag starts with 'v'
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Set version to 'latest' if on main
          [ "$VERSION" == "main" ] && VERSION=latest

          echo "IMAGE_ID=$IMAGE_ID"
          echo "VERSION=$VERSION"

          docker tag projet-devops-docker-image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION


  deploy-to-vm:
    runs-on: ubuntu-latest
    needs: push-github-image

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H 89.168.46.10 >> ~/.ssh/known_hosts

      - name: Deploy to VM - Pull and restart container
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@89.168.46.10 << 'EOF'
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/zastial/projet-devops-docker-image:merge
            docker stop project-devops-app-1 || true
            docker rm project-devops-app-1 || true
            docker run -d --name project-devops-app-1 -p 3009:3000 ghcr.io/zastial/projet-devops-docker-image:merge
          EOF

